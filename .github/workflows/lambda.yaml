name: Backed build/deploy job

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/lambda.yaml'
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        env:
          AWS_REGION: us-east-1

      - name: ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        id: build-image
        working-directory: backend
        env:
          AWS_REGION: us-east-1
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: 'latest'
        run: |
          docker build -f Dockerfile-Lambda -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo Pushing image to $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ...
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy Lambda
        working-directory: backend
        env:
          LAMBDA_FUNCTION_NAME: ${{ vars.LAMBDA_FUNCTION_NAME }}
          IMAGE_URI: ${{ steps.build-image.outputs.image }}
        run: |
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $IMAGE_URI