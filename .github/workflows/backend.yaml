name: Backed build/deploy job

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/backend.yaml'
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install packages dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        env:
          AWS_REGION: us-east-1

      - name: ECR Login
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        id: build-image
        working-directory: backend
        env:
          AWS_REGION: us-east-1
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: 'latest'
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo Pushing image to ECR $ECR_REPOSITORY:$IMAGE_TAG ...
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Retrieve service task definition
        run: |
          echo "Docker image pushed: ${{ steps.build-image.outputs.image }}"
          aws ecs describe-task-definition \
          --task-definition servicesresumecoachservicesecstask23FCB1A5 \
          --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: resume-coach-services-ecs-container
          image: ${{ steps.build-image.outputs.image }}


      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ vars.ECS_SERVICE_NAME }}
          cluster: ${{ vars.ECS_CLUSTER_NAME }}
          image: ${{ steps.ecr-login.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:latest
          force-new-deployment: true